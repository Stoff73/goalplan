"""Add user_2fa table for two-factor authentication

Revision ID: 245e31a72e28
Revises: 2736a7dd16c1
Create Date: 2025-10-01 21:08:47.062920

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '245e31a72e28'
down_revision = '2736a7dd16c1'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_2fa',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('secret', sa.Text(), nullable=False),
    sa.Column('backup_codes', sa.Text(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_2fa', schema=None) as batch_op:
        batch_op.create_index('idx_user_2fa_user_id', ['user_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_2fa_user_id'), ['user_id'], unique=True)

    with op.batch_alter_table('login_attempts', schema=None) as batch_op:
        batch_op.alter_column('attempted_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_login_attempts_attempted_at'), ['attempted_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_login_attempts_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_login_attempts_ip_address'), ['ip_address'], unique=False)
        batch_op.create_index(batch_op.f('ix_login_attempts_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               existing_nullable=False)
        batch_op.alter_column('last_activity',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_user_sessions_expires_at'), ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_sessions_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_sessions_session_token'), ['session_token'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_sessions_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_sessions_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_sessions_session_token'))
        batch_op.drop_index(batch_op.f('ix_user_sessions_is_active'))
        batch_op.drop_index(batch_op.f('ix_user_sessions_expires_at'))
        batch_op.alter_column('last_activity',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               existing_nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)

    with op.batch_alter_table('login_attempts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_login_attempts_user_id'))
        batch_op.drop_index(batch_op.f('ix_login_attempts_ip_address'))
        batch_op.drop_index(batch_op.f('ix_login_attempts_email'))
        batch_op.drop_index(batch_op.f('ix_login_attempts_attempted_at'))
        batch_op.alter_column('attempted_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               existing_nullable=False)

    with op.batch_alter_table('user_2fa', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_2fa_user_id'))
        batch_op.drop_index('idx_user_2fa_user_id')

    op.drop_table('user_2fa')
    # ### end Alembic commands ###
