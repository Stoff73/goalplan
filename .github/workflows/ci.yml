name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: goalplan_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: goalplan_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run backend linting
        run: |
          cd backend
          black --check .
          isort --check .
          mypy .

      - name: Run backend tests
        run: |
          cd backend
          pytest
        env:
          DATABASE_URL: postgresql://goalplan_test:test_password@localhost:5432/goalplan_test
          REDIS_URL: redis://localhost:6379

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run frontend linting
        run: npm run lint

      - name: Run frontend tests
        run: npm test

      - name: Build frontend
        run: npm run build
